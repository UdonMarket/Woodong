<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="model.WooBoardImpl" >
 
	 
	 <!--1. 게시물 갯수 카운트 -->
	 <select id="getTotalCount" resultType="int" parameterType="model.ParameterVO">
		SELECT  count(*) FROM woo_board WHERE 1=1
    	<if test="list.size!=0">
	    	AND bname in
	    	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    		#{item}
			</foreach>
		</if>	
		<include refid="search"></include>	
	 </select> 

	 
	 <!--2. start 와 end 에 해당하는 게시물 가져오기 (페이지 처리 & 검색 처리 )  -->
	 <select id="listPage" resultType="model.WooBoardVO"  parameterType="model.ParameterVO">
	 SELECT *  FROM
	 	( SELECT Tb.*, rownum rNum FROM 
	 		( SELECT * FROM woo_board WHERE 1=1 
    	<if test="list.size!=0">
	    	AND bname in
	    	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    		#{item}
			</foreach>
		</if>	
		<include refid="search"></include>	
	 		
	 		<choose>
	 			<when test="order != null and !order.equals('')">
	 				ORDER BY ${order} 
	 			</when>
	 			<otherwise>
	 				ORDER BY postdate DESC 
	 			</otherwise>
	 		</choose>
	 		) Tb) 
	 			WHERE rNum BETWEEN #{start} AND #{end}
	 </select> 
	 
	 <!--3. 상세보기 -->
	 <select resultType="model.WooBoardVO" id="view" parameterType="String">
	 	SELECT *  FROM woo_board WHERE boardidx = #{param1} 
	 </select>
	 
	  <!--3-1. 조회수 처리하기 -->
	 <update id="visitcount">
	 	UPDATE woo_board SET visitcount = visitcount+1 WHERE boardidx= #{0}
	 </update>
	 
	 <!-- 3-2. 	파일 리스트  -->
	 <select id="viewFile" parameterType="String"  resultType="model.FileVO">
	 	SELECT *
		FROM woo_file 
	 	WHERE boardidx = #{param1} and del_yn ='N'
	 	ORDER BY fileidx
	 </select>
	 
	<!-- 4. 글쓰기  -->	 
	  <insert id="write" parameterType="model.WooBoardVO" >
	 	INSERT INTO woo_board (
					boardidx, id, title, contents, bname,
					price, product_state, three_dimens, product_tag, woopay, 
					deal_location,latitude, longitude, publicSet) 
		VALUES (
				seq_woo_board.nextval, #{id}, #{title}, #{contents}, #{bname},
				#{price}, #{product_state}, #{three_dimens}, #{product_tag}, #{woopay}, 
				#{deal_location}, #{latitude}, #{longitude} , #{publicSet})
 					
 		<selectKey  keyProperty="seq_woo_board" resultType="int" order="AFTER">
	       SELECT seq_woo_board.currval FROM dual
	    </selectKey>			
	 </insert>
	 
	 <!--4-1. 파일 + 3d 업로드  -->
	 <insert id="insertFile" parameterType="map">
	 	<choose>
	 		<when test="threedimage!=null">
 			INSERT INTO woo_file(
				fileidx,
				boardidx,
				original_name,
				save_name,
				threedimage
			)VALUES(
				seq_woo_file.NEXTVAL,
				#{boardidx},
				#{original_name},
				#{save_name},
				#{threedimage}
			)
	 		</when>
	 		<otherwise>
			INSERT INTO woo_file(
				fileidx,
				boardidx,
				original_name,
				save_name
			)VALUES(
				seq_woo_file.NEXTVAL,
				#{boardidx},
				#{original_name},
				#{save_name}
			)
	 		</otherwise>
	 	</choose>
    </insert> 
    
	  
    <!--5. 수정처리하기 -->
	 <update id="update" parameterType="model.WooBoardVO">
	 	UPDATE woo_board SET 
		 	 title = #{title},
		 	 contents=#{contents},
		 	 bname=#{bname},
		 	 price=#{price},
		 	 product_state=#{product_state},
		 	 three_dimens=#{three_dimens},
		 	 product_tag=#{product_tag},
		 	 woopay=#{woopay},
		 	 deal_location=#{deal_location},
		 	 latitude=#{latitude},
		 	 longitude=#{longitude},
		 	 publicSet=#{publicSet}
		 	 
	 	 WHERE boardidx= #{boardidx} AND id=#{id} 
	 </update>
	 
	  <!--5-1. 파일 수정처리하기 -->
	   <update id="updateFile" parameterType="map">
	 	UPDATE woo_file SET 
		 	 del_yn = 'Y'
	 	 WHERE fileidx = #{fileidx} 
	 </update>
	  
	 
	 
	 <!--끌올기능 -->
	 <update id="jump" parameterType="model.ParameterVO" >
	 	UPDATE woo_board SET postdate = sysdate WHERE boardidx=#{boardidx} AND id=#{id}
	 </update>
	 
	 <!--6.  삭제하기-->
	 <delete id="delete" parameterType="model.ParameterVO" >
	 	DELETE FROM woo_board WHERE boardidx=#{boardidx} AND id=#{id}
	 </delete>
	 
	 <!-- 7. 내주변 상품 찾아오기  -->
	 <select id="searchRadius" resultType="model.WooBoardVO" parameterType="model.ParameterVO">
  		SELECT
  			boardidx,
			title,
			id,
			bname,
			price,
			product_state,
			three_dimens,
			product_tag,
			latitude,
			longitude,
			deal_location,
			trunc(to_number(DISTNACE_WGS84(#{latTxt}, #{lngTxt},latitude,longitude)),5) AS disKM,
			ROWNUM AS rNum 
		FROM woo_board
		WHERE 
				trunc(to_number(DISTNACE_WGS84(#{latTxt}, #{lngTxt},latitude,longitude)),5)<![CDATA[<=]]> 5
				AND ROWNUM BETWEEN 1 and 20
				<if test="list.size!=0">
			    	AND bname in
			    	<foreach collection="list" item="item" open="(" close=")" separator=",">
			    		#{item}
					</foreach>
				</if>	
		ORDER BY trunc(to_number(DISTNACE_WGS84(#{latTxt}, #{lngTxt},latitude,longitude)),5) ASC
  	</select>
	 
	<select id="selectId" resultType="String">
	 	select id from woo_board where boardidx = #{0}
	 </select> 
	 
	 
	 <insert id="communityWrite" parameterType="model.WooBoardVO">
	 	INSERT INTO woo_board (boardidx, id, title, contents, bname, price, product_state, product_tag, deal_type, latitude, longitude) VALUES (seq_woo_board.nextval, 'admin', #{title}, #{contents}, #{bname}, '0', 'no', 'no', 'no', '0', '0')
	 </insert>
	 
	<select id="selectCommunity" resultType="model.WooBoardVO" parameterType="model.ParameterVO">
		SELECT title, contents FROM woo_board WHERE 1=1 
		<if test="list.size!=0">
	    	AND bname in
	    	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    		#{item}
			</foreach>
		</if>
		ORDER BY postdate desc
	</select>
	
	<update id="communityEdit" parameterType="model.WooBoardVO">
		UPDATE woo_board SET bname=#{bname}, title=#{title}, contents=#{contents} WHERE boardidx=${boardidx}
	</update>
	
	<delete id="deleteBoard">
		DELETE FROM woo_board WHERE boardidx in
		<foreach collection="list" item="item" open="(" close=")" separator=",">
 			#{item}
		</foreach>
	</delete>
	
	  <select id="selectSellingStatus" resultType="String">
	 	select deal_type from woo_board where boardidx = #{0}
	 </select>
	 
	 <!-- search sql -->
	 <sql id="search">
		<if test="searchTxt != null and !searchTxt.equals('') and !searchField.equals('')">
			<choose>
				<when test="searchField == 'tc'.toString()">
				AND (title LIKE '%'||#{searchTxt}||'%' ) or (contents LIKE '%'||#{searchTxt}||'%' )
				</when>
				<otherwise>AND ${searchField} LIKE '%'||#{searchTxt}||'%'</otherwise>
			</choose>
		</if>
		<if test="priceStart != null and !priceStart.equals('')">
			AND price BETWEEN #{priceStart} AND #{priceEnd}
		</if>
		<if test="ispay != null and !ispay.equals('')">
			AND woopay='Y'
		</if>
		<if test="pstate != null and !pstate.equals('')">
			AND  product_state=#{pstate}
		</if>
	</sql>
	
	
	<select id="list" resultType="model.WooBoardVO"  parameterType="model.ParameterVO">
	 SELECT  
	 	boardidx,
		title,
		contents,
		postdate,
		id,
		bname,
		price,
		product_state,
		three_dimens,
		latitude,
		longitude
	 FROM 
	 	( SELECT Tb.*, rownum rNum FROM  
	 		(SELECT * FROM woo_board 
	 		<if test="list.size!=0">
		    	WHERE bname in
		    	<foreach collection="list" item="item" open="(" close=")" separator=",">
		    		#{item}
				</foreach> 
			</if>
	 ORDER BY boardidx DESC ) Tb) 
	 			WHERE rNum BETWEEN 1 AND 6
	 </select> 
	 
	 <select id="bnameProductCount" resultType="model.ParameterVO" parameterType="model.ParameterVO">
	 	select count(*) num, bname FROM woo_board
	 	
	 		WHERE bname in
	    	<foreach collection="list" item="item" open="(" close=")" separator=",">
	    		#{item}
			</foreach> 
	 	
	 	 Group by bname order by num
	 </select>
	 
	 <update id="updateDeal" parameterType="model.WooBoardVO">
	 	UPDATE woo_board SET deal_type=#{deal_type} WHERE boardidx=#{boardidx}
	 </update>
	 
	 
	 <select id="selectList" resultType="model.WooBoardVO">
	 	SELECT * FROM woo_board WHERE bname in 
	 	<foreach collection="list" item="item" open="(" close=")" separator=",">
    		#{item}
		</foreach>  
	 </select>
	 
	 <update id="updateJuso">
	 	UPDATE woo_board SET latitude=#{1}, longitude=#{2} WHERE boardidx=#{0}
	 </update>

	 
	 
</mapper>  
